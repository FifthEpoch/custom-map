{"mappings":"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","sources":["node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/util.js","node_modules/ol/src/has.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/transform.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/math.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/Object.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/dom.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/sphere.js","node_modules/ol/src/proj.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/size.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction.js","node_modules/ol/src/Feature.js","node_modules/ol/src/geom/GeometryCollection.js","node_modules/ol/src/format/Feature.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/format/JSONFeature.js","node_modules/ol/src/geom/flat/interpolate.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/geom/LineString.js","node_modules/ol/src/geom/MultiLineString.js","node_modules/ol/src/geom/MultiPoint.js","node_modules/ol/src/geom/MultiPolygon.js","node_modules/ol/src/geom/flat/center.js","node_modules/ol/src/format/GeoJSON.js","node_modules/ol/src/Geolocation.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/Image.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/Tile.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/reproj.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/source/common.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/XYZ.js","node_modules/ol/src/source/OSM.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/source/Vector.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/ol/src/layer/BaseVector.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/layer/Vector.js","node_modules/ol/src/renderer/canvas/ImageLayer.js","node_modules/ol/src/ImageCanvas.js","node_modules/ol/src/renderer/canvas/VectorImageLayer.js","node_modules/ol/src/layer/VectorImage.js","js/main.js"],"sourcesContent":["/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n            listeners[i]\n          ).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n            listeners[i]\n          ).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type|Type[], listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return} CombinedOnSignature\n */\n\n/***\n * @typedef {import(\"./events\").EventsKey|Array<import(\"./events\").EventsKey>} OnReturn\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    /***\n     * @type {OnSignature<EventTypes, import(\"./events/Event.js\").default, OnReturn>}\n     */\n    this.on = this.onInternal;\n\n    /***\n     * @type {OnSignature<EventTypes, import(\"./events/Event.js\").default, OnReturn>}\n     */\n    this.once = this.onceInternal;\n\n    /***\n     * @type {OnSignature<EventTypes, import(\"./events/Event.js\").default, void>}\n     */\n    this.un = this.unInternal;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function(?): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function(?): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function(?): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} SourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?CanvasRenderingContext2D} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n    canvas.style.all = 'initial';\n  }\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES,\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (let i = 0; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = /** @type {number} */ (this.getResolution());\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\n          event.element\n        );\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer\n      ).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    this.set(MapProperty.VIEW, view);\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view !== undefined ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../Observable\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../Observable\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature<import(\"./geom/Geometry.js\").default>|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [opt_geometries] Geometries.\n   */\n  constructor(opt_geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.GEOMETRY_COLLECTION;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {assign} from '../obj.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      let dataProjection = opt_options.dataProjection\n        ? getProjection(opt_options.dataProjection)\n        : this.readProjection(source);\n      if (\n        opt_options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === Units.TILE_PIXELS\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(opt_options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: opt_options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, opt_options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [opt_options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    opt_options &&\n    /** @type {WriteOptions} */ (opt_options).decimals !== undefined\n  ) {\n    const power = Math.pow(\n      10,\n      /** @type {WriteOptions} */ (opt_options).decimals\n    );\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [opt_options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.JSON;\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, opt_options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [opt_interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if (\n      (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<Array<number>>} [opt_endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, opt_layout, opt_endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      let layout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const endss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        opt_right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(\n      this.getFlatInteriorPoints().slice(),\n      GeometryLayout.XYM\n    );\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEndss\n    );\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, opt_options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, opt_options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(\n          this.readFeatureFromObject(geoJSONFeatures[i], opt_options)\n        );\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, opt_options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, opt_options) {\n    return readGeometry(object, opt_options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, opt_options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case GeometryType.POINT: {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object.type);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, opt_options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, opt_options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  geometry = transformGeometryWithOptions(geometry, true, opt_options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case GeometryType.POINT: {\n      geoJSON = writePointGeometry(\n        /** @type {Point} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.CIRCLE: {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    const options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/Geolocation\n */\nimport BaseEvent from './events/Event.js';\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  identityTransform,\n} from './proj.js';\nimport {toRadians} from './math.js';\n\n/**\n * @enum {string}\n */\nconst Property = {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions',\n};\n\n/**\n * @classdesc\n * Events emitted on Geolocation error.\n */\nclass GeolocationError extends BaseEvent {\n  /**\n   * @param {GeolocationPositionError} error error object.\n   */\n  constructor(error) {\n    super(EventType.ERROR);\n\n    /**\n     * @type {number}\n     */\n    this.code = error.code;\n\n    /**\n     * @type {string}\n     */\n    this.message = error.message;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See https://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:accuracy'|'change:accuracyGeometry'|'change:altitude'|\n *    'change:altitudeAccuracy'|'change:heading'|'change:position'|'change:projection'|'change:speed'|'change:tracking'|\n *    'change:trackingOptions'} GeolocationObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<GeolocationObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'error', GeolocationError, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|GeolocationObjectEventTypes|\n *     'error', Return>} GeolocationOnSignature\n */\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](https://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes, register a listener for the generic\n * `change` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     var geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       window.console.log(geolocation.getPosition());\n *     });\n *\n * @fires module:ol/events/Event~BaseEvent#event:error\n * @api\n */\nclass Geolocation extends BaseObject {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {GeolocationOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options || {};\n\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.position_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./proj.js\").TransformFunction}\n     */\n    this.transform_ = identityTransform;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.watchId_ = undefined;\n\n    this.addChangeListener(Property.PROJECTION, this.handleProjectionChanged_);\n    this.addChangeListener(Property.TRACKING, this.handleTrackingChanged_);\n\n    if (options.projection !== undefined) {\n      this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      this.setTrackingOptions(options.trackingOptions);\n    }\n\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTracking(false);\n    super.disposeInternal();\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    const projection = this.getProjection();\n    if (projection) {\n      this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        projection\n      );\n      if (this.position_) {\n        this.set(Property.POSITION, this.transform_(this.position_));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleTrackingChanged_() {\n    if ('geolocation' in navigator) {\n      const tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions()\n        );\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPosition} position position event.\n   */\n  positionChange_(position) {\n    const coords = position.coords;\n    this.set(Property.ACCURACY, coords.accuracy);\n    this.set(\n      Property.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude\n    );\n    this.set(\n      Property.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ? undefined : coords.altitudeAccuracy\n    );\n    this.set(\n      Property.HEADING,\n      coords.heading === null ? undefined : toRadians(coords.heading)\n    );\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    const projectedPosition = this.transform_(this.position_);\n    this.set(Property.POSITION, projectedPosition);\n    this.set(Property.SPEED, coords.speed === null ? undefined : coords.speed);\n    const geometry = circularPolygon(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(Property.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPositionError} error error object.\n   */\n  positionError_(error) {\n    this.dispatchEvent(new GeolocationError(error));\n  }\n\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAccuracy() {\n    return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\n  }\n\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  getAccuracyGeometry() {\n    return /** @type {?import(\"./geom/Polygon.js\").default} */ (\n      this.get(Property.ACCURACY_GEOMETRY) || null\n    );\n  }\n\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  getAltitude() {\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\n  }\n\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAltitudeAccuracy() {\n    return /** @type {number|undefined} */ (\n      this.get(Property.ALTITUDE_ACCURACY)\n    );\n  }\n\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  getHeading() {\n    return /** @type {number|undefined} */ (this.get(Property.HEADING));\n  }\n\n  /**\n   * Get the position of the device.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the projection associated with the position.\n   * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"./proj/Projection.js\").default|undefined} */ (\n      this.get(Property.PROJECTION)\n    );\n  }\n\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  getSpeed() {\n    return /** @type {number|undefined} */ (this.get(Property.SPEED));\n  }\n\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  getTracking() {\n    return /** @type {boolean} */ (this.get(Property.TRACKING));\n  }\n\n  /**\n   * Get the tracking options.\n   * See https://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](https://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  getTrackingOptions() {\n    return /** @type {PositionOptions|undefined} */ (\n      this.get(Property.TRACKING_OPTIONS)\n    );\n  }\n\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(Property.PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  setTracking(tracking) {\n    this.set(Property.TRACKING, tracking);\n  }\n\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  setTrackingOptions(options) {\n    this.set(Property.TRACKING_OPTIONS, options);\n  }\n}\n\nexport default Geolocation;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    const displacement = this.getDisplacement();\n    this.canvas_ = {};\n    this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (!this.color_ || this.canvas_[pixelRatio]) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      imgSize,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (\n      this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION\n    ) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    const displacement = this.getDisplacement();\n    anchor[0] -= displacement[0];\n    anchor[1] += displacement[1];\n\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './source/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_contextOptions\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n  assign(context, opt_contextOptions);\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n  assign(stitchContext, opt_contextOptions);\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (\n      isBrokenDiagonalRendering() ||\n      opt_contextOptions === IMAGE_SMOOTHING_DISABLED\n    ) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_contextOptions\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    this.contextOptions_ = opt_contextOptions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.contextOptions_\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = (scale * xFromOrigin) / tileSize[0];\n    let tileCoordY = (scale * yFromOrigin) / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    const tileGrid = options.tileGrid;\n    if (tileGrid) {\n      toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {object|undefined}\n     */\n    this.contextOptions_ =\n      options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return this.contextOptions_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return (\n      super.getKey() +\n      (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : '')\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.contextOptions_\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [opt_options] Open Street Map options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n      const z = tileGrid.getZForResolution(resolution);\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n      );\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {Layer<TileSourceType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return abstract();\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === '' &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (\n      context &&\n      (context.canvas.width === 0 ||\n        context.canvas.style.transform === transform)\n    ) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toString as toTransformString} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    assign(context, tileSource.getContextOptions());\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n          layerState.opacity\n        );\n        if (clips && !inTransition) {\n          context.restore();\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @param {number} opacity Opacity.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition, opacity) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alpha = opacity * tileAlpha;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (tileAlpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {BaseTileLayer<TileSourceType>}\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      flatCoordinates =\n        /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n          geometry\n        ).getOrientedFlatCoordinates();\n      builderEndss = [];\n      const endss =\n        /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n          geometry\n        ).getEndss();\n      offset = 0;\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const myEnds = [];\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          offset,\n          endss[i],\n          stride,\n          myEnds\n        );\n        builderEndss.push(myEnds);\n      }\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEndss,\n        geometry,\n        renderer,\n        inflateMultiCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.POLYGON ||\n      type == GeometryType.MULTI_LINE_STRING\n    ) {\n      builderEnds = [];\n      flatCoordinates =\n        type == GeometryType.POLYGON\n          ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getOrientedFlatCoordinates()\n          : geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(\n        flatCoordinates,\n        0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds(),\n        stride,\n        builderEnds\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnds,\n        geometry,\n        renderer,\n        inflateCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.LINE_STRING ||\n      type == GeometryType.CIRCLE\n    ) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        false,\n        false\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n        inflateCoordinates,\n      ]);\n    } else if (type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (builderEnd > builderBegin) {\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n      }\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      builderEnd = this.coordinates.length;\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n      ]);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0] * this.imagePixelRatio_;\n    this.originY_ = origin[1] * this.imagePixelRatio_;\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate = (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    let previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  let previousAngle;\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate = (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextBaseline,\n  drawImageOrLabel,\n} from '../canvas.js';\nimport {\n  defaultTextAlign,\n  measureAndCacheTextWidth,\n  measureTextHeight,\n  measureTextWidths,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    const x = align * renderWidth + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[14]\n            );\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (\n        textState.textBaseline\n      );\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n    this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n    this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScaleArray();\n    this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    super.useContainer(target, transform, opacity);\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      if (!this.containerReused && canvas.width > 0) {\n        canvas.width = 0;\n      }\n      return this.container;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = layerState.opacity;\n    const container = this.container;\n    if (opacity !== parseFloat(container.style.opacity)) {\n      container.style.opacity = opacity === 1 ? '' : String(opacity);\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.wrappedRenderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(\n          toUserExtent(loadExtents[i], projection),\n          resolution,\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ViewHint from '../../ViewHint.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport {assign} from '../../obj.js';\nimport {compose as composeTransform, makeInverse} from '../../transform.js';\nimport {containsExtent, intersects as intersectsExtent} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getIntersection, isEmpty} from '../../extent.js';\nimport {toString as toTransformString} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection)\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        let projection = viewState.projection;\n        if (!ENABLE_RASTER_REPROJECTION) {\n          const sourceProjection = imageSource.getProjection();\n          if (sourceProjection) {\n            projection = sourceProjection;\n          }\n        }\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection\n        );\n        if (image && this.loadImage(image)) {\n          this.image_ = image;\n        }\n      } else {\n        this.image_ = null;\n      }\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const size = frameState.size;\n    const scale =\n      (pixelRatio * imageResolution) / (viewResolution * imagePixelRatio);\n\n    let width = Math.round(size[0] * pixelRatio);\n    let height = Math.round(size[1] * pixelRatio);\n    const rotation = viewState.rotation;\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n\n    const context = this.context;\n    const canvas = context.canvas;\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scale,\n      scale,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolution,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolution\n    );\n\n    this.renderedResolution = (imageResolution * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    assign(context, this.getLayer().getSource().getContextOptions());\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      let previousAlpha;\n      if (opacity !== 1) {\n        previousAlpha = context.globalAlpha;\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(\n        img,\n        0,\n        0,\n        +img.width,\n        +img.height,\n        Math.round(dx),\n        Math.round(dy),\n        Math.round(dw),\n        Math.round(dh)\n      );\n      if (opacity !== 1) {\n        context.globalAlpha = previousAlpha;\n      }\n    }\n    this.postRender(context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [opt_loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, opt_loader) {\n    const state =\n      opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/renderer/canvas/VectorImageLayer\n */\nimport CanvasImageLayerRenderer from './ImageLayer.js';\nimport CanvasVectorLayerRenderer from './VectorLayer.js';\nimport EventType from '../../events/EventType.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport ImageState from '../../ImageState.js';\nimport RBush from 'rbush';\nimport ViewHint from '../../ViewHint.js';\nimport {apply, compose, create} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {getHeight, getWidth, isEmpty, scaleFromCenter} from '../../extent.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasVectorImageLayerRenderer extends CanvasImageLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorImage.js\").default} layer Vector image layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = new CanvasVectorLayerRenderer(layer);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.layerImageRatio_ = layer.getImageRatio();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToVectorPixelTransform_ = create();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.vectorRenderer_.dispose();\n    super.disposeInternal();\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.vectorRenderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    const vectorPixel = apply(\n      this.coordinateToVectorPixelTransform_,\n      apply(this.renderedPixelToCoordinateTransform_, pixel.slice())\n    );\n    return this.vectorRenderer_.getFeatures(vectorPixel);\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    this.vectorRenderer_.handleFontsChanged();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const hints = frameState.viewHints;\n    const vectorRenderer = this.vectorRenderer_;\n    let renderedExtent = frameState.extent;\n    if (this.layerImageRatio_ !== 1) {\n      renderedExtent = renderedExtent.slice(0);\n      scaleFromCenter(renderedExtent, this.layerImageRatio_);\n    }\n    const width = getWidth(renderedExtent) / viewResolution;\n    const height = getHeight(renderedExtent) / viewResolution;\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      vectorRenderer.useContainer(null, null, 1);\n      const context = vectorRenderer.context;\n      const imageFrameState =\n        /** @type {import(\"../../PluggableMap.js\").FrameState} */ (\n          assign({}, frameState, {\n            declutterTree: new RBush(9),\n            extent: renderedExtent,\n            size: [width, height],\n            viewState: /** @type {import(\"../../View.js\").State} */ (\n              assign({}, frameState.viewState, {\n                rotation: 0,\n              })\n            ),\n          })\n        );\n      const image = new ImageCanvas(\n        renderedExtent,\n        viewResolution,\n        pixelRatio,\n        context.canvas,\n        function (callback) {\n          if (\n            vectorRenderer.prepareFrame(imageFrameState) &&\n            vectorRenderer.replayGroupChanged\n          ) {\n            vectorRenderer.clipping = false;\n            vectorRenderer.renderFrame(imageFrameState, null);\n            vectorRenderer.renderDeclutter(imageFrameState);\n            callback();\n          }\n        }\n      );\n\n      image.addEventListener(\n        EventType.CHANGE,\n        function () {\n          if (image.getState() === ImageState.LOADED) {\n            this.image_ = image;\n            const imageResolution = image.getResolution();\n            const imagePixelRatio = image.getPixelRatio();\n            const renderedResolution =\n              (imageResolution * pixelRatio) / imagePixelRatio;\n            this.renderedResolution = renderedResolution;\n            this.coordinateToVectorPixelTransform_ = compose(\n              this.coordinateToVectorPixelTransform_,\n              width / 2,\n              height / 2,\n              1 / renderedResolution,\n              -1 / renderedResolution,\n              0,\n              -viewState.center[0],\n              -viewState.center[1]\n            );\n          }\n        }.bind(this)\n      );\n      image.load();\n    }\n\n    if (this.image_) {\n      this.renderedPixelToCoordinateTransform_ =\n        frameState.pixelToCoordinateTransform.slice();\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   */\n  preRender() {}\n\n  /**\n   */\n  postRender() {}\n\n  /**\n   */\n  renderDeclutter() {}\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(\n        coordinate,\n        frameState,\n        hitTolerance,\n        callback,\n        matches\n      );\n    } else {\n      return super.forEachFeatureAtCoordinate(\n        coordinate,\n        frameState,\n        hitTolerance,\n        callback,\n        matches\n      );\n    }\n  }\n}\n\nexport default CanvasVectorImageLayerRenderer;\n","/**\n * @module ol/layer/VectorImage\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorImageLayerRenderer from '../renderer/canvas/VectorImageLayer.js';\nimport {assign} from '../obj.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [declutter=false] Declutter images and text on this layer. The priority is defined\n * by the `zIndex` of the style and the render order of features. Higher z-index means higher priority.\n * Within the same z-index, a feature rendered before another has higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link import(\"../style/Style.js\").default the style docs} for the default style that will be used if\n * this is not defined.\n * @property {number} [imageRatio=1] Ratio by which the rendered extent should be larger than the\n * viewport extent. A larger ratio avoids cut images during panning, but will cause a decrease in performance.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType>}\n * @api\n */\nclass VectorImageLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n    delete baseOptions.imageRatio;\n    super(baseOptions);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.imageRatio_ =\n      options.imageRatio !== undefined ? options.imageRatio : 1;\n  }\n\n  /**\n   * @return {number} Ratio between rendered extent size and viewport extent size.\n   */\n  getImageRatio() {\n    return this.imageRatio_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasVectorImageLayerRenderer(this);\n  }\n}\n\nexport default VectorImageLayer;\n","import 'ol/ol.css';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport Feature from 'ol/Feature';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport Geolocation from 'ol/Geolocation';\nimport Point from 'ol/geom/Point';\nimport {Circle as CircleStyle, Fill, Stroke, Style} from 'ol/style';\nimport {OSM, Vector as VectorSource} from 'ol/source';\nimport {Tile as TileLayer, Vector as VectorLayer, VectorImage as VectorImg} from 'ol/layer';\n\nvar active_route = undefined;\nvar active_features;\nvar is_ascending = true;\n\n\n\n// ROUTE DATA --------------------------------------------------------------------------------\n\nconst geojson_obj = {\n    'type': 'FeatureCollection',\n    'crs': {\n        'type': 'name',\n        'properties': {\n            'name': 'EPSG:4326',\n        },\n    },\n    'features': [\n        {\n            'type': 'Feature',\n            'geometry': {\n                'type': 'Polygon',\n                'coordinates': [[\n                    [-13616614.70335676,6036432.883910653],\n                    [-13616648.342852032,6036445.002258454],\n                    [-13616656.252196932,6036732.96909078],\n                    [-13616624.413413644,6036758.694251015],\n                ]],\n            },\n            'properties': {\n                'route': 'a',\n                'order': 0,\n                'name': 'Old Rainier Brewery Dr.',\n                'dir': 'Head North on Old Rainier Brewery Dr.',\n                'dir_icon': 'js/ui/forward.png',\n                'up_dir': 'turn left onto S. Stevens St.',\n                'up_dir_icon': 'js/ui/left.png',\n                'media-type': 'audio',\n                'media':'<iframe style=\"border: 0; width: 100%; height: 42px;\" src=\"https://bandcamp.com/EmbeddedPlayer/album=1462003022/size=small/bgcol=333333/linkcol=2ebd35/artwork=none/track=2455122445/transparent=true/\" seamless><a href=\"https://regionalattraction.bandcamp.com/album/shadows-light\">Shadows &amp; Light by Wind❏ws</a></iframe>',\n            }\n        },\n        {\n            'type': 'Feature',\n            'geometry': {\n                'type': 'Polygon',\n                'coordinates': [[\n                    [-13616769.330308417,6036773.749069517],\n                    [-13616769.570573734,6036738.663335189],\n                    [-13616655.415436042,6036718.196383314],\n                    [-13616654.447382022,6036708.112694637],\n                    [-13616622.682020685,6036730.394112845],\n                    [-13616624.061933165,6036758.909400782],\n                ]],\n            },\n            'properties': {\n                'route': 'a',\n                'name': 'S Stevens St',\n                'order': 1,\n                'dir': 'head West on South Stevens Street toward Airport Way S.',\n                'dir_icon': 'js/ui/forward.png',\n                'up_dir': 'turn right onto Airport Way S.',\n                'up_dir_icon': 'js/ui/right.png',\n                'dn_dir': 'turn right onto Old Rainier Brewery Dr.',\n                'dn_dir_icon': 'js/ui/right.png',\n                'media-type': 'video',\n                'media': '<div style=\"padding:75% 0 0 0;position:relative;\"><iframe src=\"https://player.vimeo.com/video/31122911?h=5708fc8e4d&autoplay=1&loop=1&color=CAC9E8&title=0&byline=0&portrait=0\" style=\"position:absolute;top:0;left:0;width:100%;height:100%;\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen></iframe></div><script src=\"https://player.vimeo.com/api/player.js\"></script>',\n            }\n        },\n        {\n            'type': 'Feature',\n            'geometry': {\n                'type': 'Polygon',\n                'coordinates': [[\n                    [-13616725.080167754,6036730.629392092],\n                    [-13616784.407239255,6036742.021774085],\n                    [-13616780.646542171,6037238.455755829],\n                    [-13616718.014129225,6037239.9330574125],\n                ]],\n            },\n            'properties': {\n                'route': 'a',\n                'name': 'Airport Way S',\n                'order': 2,\n                'dir': 'Head North on Airport Way S.',\n                'dir_icon': 'js/ui/forward.png',\n                'up_dir': 'turn left onto Lander St.',\n                'up_dir_icon': 'js/ui/left.png',\n                'dn_dir': 'turn left onto S. Stevens St.',\n                'dn_dir_icon': 'js/ui/left.png',\n                'media-type': 'img',\n                'media': '<div style=\"width:100%;height:0;padding-bottom:73%;position:relative;\"><iframe src=\"https://giphy.com/embed/ncyIupJW3D8qs\" width=\"100%\" height=\"100%\" style=\"position:absolute\" frameBorder=\"0\" class=\"giphy-embed\" allowFullScreen></iframe></div><p><a href=\"https://giphy.com/gifs/halloween-mcdonalds-happy-meal-ncyIupJW3D8qs\">via GIPHY</a></p>',\n            }\n        },\n        {\n            'type': 'Feature',\n            'geometry': {\n                'type': 'Polygon',\n                'coordinates': [[\n                    [-13618221.468956664,6040740.425829238],\n                    [-13618221.468956664,6040694.775587578],\n                    [-13618009.283377616,6040694.775587578],\n                    [-13618009.283377616,6040740.425829238],\n                ]],\n            },\n            'properties': {\n                'route': 'b',\n                'name': 'S Washington St',\n                'order': 0,\n\n                'asc_dir': 'Head East',\n                'asc_icon': 'forward',\n                'asc_tran_dir': 'Turn right',\n                'asc_tran_icon': 'right',\n\n                'dsc_dir': 'Head West',\n                'dsc_icon': 'forward',\n                'dsc_tran_dir': 'ud',\n                'dsc_tran_icon': 'ud',\n\n                'media-type': 'vid',\n                'media': '<iframe width=\"560\" height=\"315\" src=\"https://www.youtube-nocookie.com/embed/ZjMR8KU6YEc\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>',\n            }\n        },\n        {\n            'type': 'Feature',\n            'geometry': {\n                'type': 'Polygon',\n                'coordinates': [[\n                    [-13618132.169797894,6040740.425829238],\n                    [-13618132.169797894,6040555.8131731255],\n                    [-13618009.283377616,6040555.8131731255],\n                    [-13618009.283377616,6040740.425829238],\n                ]],\n            },\n            'properties': {\n                'route': 'b',\n                'name': 'Occidental Ave S',\n                'order': 1,\n\n                'asc_dir': 'Head South',\n                'asc_icon': 'forward',\n                'asc_tran_dir': 'Continue South',\n                'asc_tran_icon': 'forward',\n\n                'dsc_dir': 'Continue North',\n                'dsc_icon': 'forward',\n                'dsc_tran_dir': 'Turn left',\n                'dsc_tran_icon': 'left',\n\n                'media-type': 'img',\n                'media': '<div style=\"width:100%;height:0;padding-bottom:100%;position:relative;\"><iframe src=\"https://giphy.com/embed/dFDWuV7gIMMINpDhmC\" width=\"100%\" height=\"100%\" style=\"position:absolute\" frameBorder=\"0\" class=\"giphy-embed\" allowFullScreen></iframe></div><p><a href=\"https://giphy.com/gifs/retro-digital-online-dFDWuV7gIMMINpDhmC\">via GIPHY</a></p>',\n            }\n        },\n        {\n            'type': 'Feature',\n            'geometry': {\n                'type': 'Polygon',\n                'coordinates': [[\n                    [-13618132.169797894,6040596.711524497],\n                    [-13618132.169797894,6040412.982899374],\n                    [-13618009.283377616,6040412.982899374],\n                    [-13618009.283377616,6040596.711524497],\n                ]],\n            },\n            'properties': {\n                'route': 'b',\n                'name': 'Occidental Ave S',\n                'order': 2,\n\n                'asc_dir': 'Continue South',\n                'asc_icon': 'forward',\n                'asc_tran_dir': 'Turn left',\n                'asc_tran_icon': 'left',\n\n                'dsc_dir': 'Head North',\n                'dsc_icon': 'forward',\n                'dsc_tran_dir': 'Continue North',\n                'dsc_tran_icon': 'forward',\n\n                'media-type': 'img',\n                'media': '<div style=\"width:100%;height:0;padding-bottom:100%;position:relative;\"><iframe src=\"https://giphy.com/embed/dFDWuV7gIMMINpDhmC\" width=\"auto\" height=\"50%\" style=\"position:absolute\" frameBorder=\"0\" class=\"giphy-embed\" allowFullScreen></iframe></div>',\n            }\n        },\n        {\n            'type': 'Feature',\n            'geometry': {\n                'type': 'Polygon',\n                'coordinates': [[\n                    [-13618132.169797894,6040455.573383794],\n                    [-13618132.169797894,6040412.982899374],\n                    [-13617642.79247341,6040412.982899374],\n                    [-13617670.871720519,6040455.573383794],\n                ]],\n            },\n            'properties': {\n                'route': 'b',\n                'name': 'S Jackson St',\n                'order': 3,\n\n                'asc_dir': 'Head East',\n                'asc_icon': 'forward',\n                'asc_tran_dir': 'ud',\n                'asc_tran_icon': 'ud',\n\n                'dsc_dir': 'Head West',\n                'dsc_icon': 'forward',\n                'dsc_tran_dir': 'Turn right',\n                'dsc_tran_icon': 'right',\n\n                'media-type': 'aud',\n                'media': '<iframe width=\"100%\" height=\"166\" scrolling=\"no\" frameborder=\"no\" allow=\"autoplay\" src=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/599169165&color=%239c9c7c&auto_play=true&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true\"></iframe><div style=\"font-size: 10px; color: #cccccc;line-break: anywhere;word-break: normal;overflow: hidden;white-space: nowrap;text-overflow: ellipsis; font-family: Interstate,Lucida Grande,Lucida Sans Unicode,Lucida Sans,Garuda,Verdana,Tahoma,sans-serif;font-weight: 100;\"><a href=\"https://soundcloud.com/user-originalmusic\" title=\"Original Music\" target=\"_blank\" style=\"color: #cccccc; text-decoration: none;\">Original Music</a> · <a href=\"https://soundcloud.com/user-originalmusic/sovietwave-novye-doma\" title=\"SovietWave - Новые Дома\" target=\"_blank\" style=\"color: #cccccc; text-decoration: none;\">SovietWave - Новые Дома</a></div>',\n            }\n        }\n    ]\n};\n\nconst styles = {\n    'Polygon': new Style({\n        stroke: new Stroke({\n            color: 'rgba(0,255,0,0.5)',\n            width: 1,\n        }),\n        fill: new Fill({\n            color: 'rgba(0,255,0,0.2)',\n        }),\n    }),\n};\n\nconst styleFunction = function (feature) {\n    return styles[feature.getGeometry().getType()];\n};\n\n\n\n\n// MAP SETUP ---------------------------------------------------------------------------------------\n\n\nconst view = new View({\n    center: [0, 0],\n    zoom: 18,\n});\n\nconst map = new Map({\n    layers: [\n        new TileLayer({\n            source: new OSM(),\n        }),\n    ],\n    target: 'map',\n    view: view,\n});\n\nmap.on('postcompose',function(e){\n    document.querySelector('canvas').style.filter=\"invert(85%)\";\n});\n\nconst box_v_layer = new VectorImg({\n    source: new VectorSource({\n        features: new GeoJSON().readFeatures(geojson_obj),\n    }),\n    visible: true,\n    title: 'geojson',\n    style: styleFunction,\n});\nmap.addLayer(box_v_layer);\n\n\nmap.on('click', evt => {\n    const coord = evt.coordinate;\n    el('click_pos').innerText = coord;\n\n    get_feature_at_coord(coord);\n    serve();\n});\n\n\n\n\n// GENERAL UTILITY -------------------------------------------------------------------------\n\nfunction el(id) {\n    return document.getElementById(id);\n}\n\nfunction get_feature_at_coord(_coord) {\n    var active_features_in_this_func = [];\n    let pixel = map.getPixelFromCoordinate(_coord);\n    console.log('pixel: ' + pixel);\n    map.forEachFeatureAtPixel(pixel,\n        (feat, layer) => {\n            if (layer === box_v_layer){\n                active_features_in_this_func.push(feat);\n            }\n        });\n    set_active_route(active_features_in_this_func);\n}\n\n\n\n// GEOLOCATION TRACKING ---------------------------------------------------------------\n\nconst geolocation = new Geolocation({\n    trackingOptions: {\n        enableHighAccuracy: true,\n    },\n    projection: view.getProjection(),\n    tracking: true,\n});\n\nconst accuracyFeature = new Feature();\ngeolocation.on('change:accuracyGeometry', function () {\n    accuracyFeature.setGeometry(geolocation.getAccuracyGeometry());\n});\n\nconst positionFeature = new Feature();\npositionFeature.setStyle(\n    new Style({\n        image: new CircleStyle({\n            radius: 6,\n            fill: new Fill({\n                color: '#3399CC',\n            }),\n            stroke: new Stroke({\n                color: '#fff',\n                width: 2,\n            }),\n        }),\n    })\n);\n\nnew VectorLayer({\n    map: map,\n    source: new VectorSource({\n        features: [accuracyFeature, positionFeature],\n    }),\n});\n\ngeolocation.on('change', function () {\n    const coord = geolocation.getPosition();\n    el('position').innerText = String(coord);\n    view.setCenter(coord);\n    positionFeature.setGeometry(coord ? new Point(coord) : null);\n\n    active_features = get_feature_at_coord(coord);\n    set_active_route(active_features);\n});\n\ngeolocation.on('error', function (error) {\n    el('nav_txt').innerText = error.message;\n});\n\nfunction set_active_route(_active_feat){\n    console.log(\"_active_feat received with length \" + _active_feat.length)\n    console.log(\"active route: \" + active_route);\n    if (active_route !== undefined){  // user has already been placed in a route\n        if (_active_feat.length > 0) {\n            if (_active_feat.length === 1) {\n                var is_new_route = (active_route !== _active_feat[0]);\n                if (is_new_route) { active_route = _active_feat[0]; }\n                render_nav(active_route, is_ascending);\n            } else {    // there are 2 possible route\n                var next_route;\n                is_ascending = _active_feat[0].get('order') < _active_feat[1].get('order');\n                if (active_route === _active_feat[1]) {\n                    is_ascending = !is_ascending\n                    next_route = _active_feat[0];\n                } else {\n                    next_route = _active_feat[1];\n                }\n                render_tran_nav(active_route, next_route, is_ascending);\n            }\n        }\n    } else {    // new user, no active route assigned yet\n        if (_active_feat.length > 0) {\n            if (_active_feat.length > 0) {\n                if (_active_feat.length === 1) {\n                    active_route = _active_feat[0];\n                    render_nav(active_route, is_ascending);\n                } else {    // _features.length === 2\n                    // have user pick ?\n                    var next_route;\n                    if (_active_feat[0].get('order') > _active_feat[1].get('order')) {\n                        active_route = _active_feat[1];\n                        next_route = _active_feat[0];\n                    } else {\n                        active_route = _active_feat[0];\n                        next_route = _active_feat[1];\n                    }\n\n                    render_tran_nav(active_route, next_route, is_ascending);\n                }\n            }\n        } else {    // no active route, no active feature >> error\n            el('media_button_div').style.display = \"none\";\n            el('nav_txt').innerText = \"You are current not on route, check out the map to get on a route.\";\n        }\n    }\n}\n\n\n// MAP ROTATION ------------------------------------------------------------------------\n\nconst gn = new GyroNorm();\n\ngn.init().then(function () {\n    gn.start(function (event) {\n        const center = view.getCenter();\n        const resolution = view.getResolution();\n        const beta = toRadians(event.do.beta);\n        const gamma = toRadians(event.do.gamma);\n\n        center[0] -= resolution * gamma * 25;\n        center[1] += resolution * beta * 25;\n\n        view.setCenter(center);\n    });\n});\n\n// create a new device orientation object set to track the device\nvar deviceOrientation = new ol.DeviceOrientation({\n    tracking: true\n});\n// when the device changes heading, rotate the view so that\n// 'up' on the device points the direction we are facing\ndeviceOrientation.on('change:heading', onChangeHeading);\nfunction onChangeHeading(event) {\n    var heading = event.target.getHeading();\n    console.log(\"heading changed: \" + heading);\n    view.setRotation(-heading);\n}\n\n// NAVIGATION DIRECTIONS ------------------------------------------------------------------------\n\n// _isTran: 0 = not tran, -1 = downstream, 1 = upstream\nfunction render_nav(_feat, _is_asc){\n    var nav_content = '';\n    var nav_icon = '';\n    if (_is_asc) {\n        nav_content = _feat.get('asc_dir') + ' on ' + _feat.get('name');\n        nav_icon = _feat.get('asc_icon');\n    } else {\n        nav_content = _feat.get('dsc_dir')+ ' on ' + _feat.get('name');\n        nav_icon = _feat.get('dsc_icon');\n    }\n    el('nav_txt').innerText = nav_content;\n    el('nav-icon').src = './js/ui/' + nav_icon + '.png';\n    el('nav-icon').alt = nav_icon;\n    serve();\n}\n\nfunction render_tran_nav(_feat, _next_feat, _is_asc){\n    var nav_content = '';\n    var nav_icon = '';\n    if (_is_asc) {\n        nav_content = _feat.get('asc_tran_dir') + ' on ' + _next_feat.get('name');\n        nav_icon = _feat.get('asc_tran_icon');\n    } else {\n        nav_content = _feat.get('dsc_tran_dir') + ' on ' + _next_feat.get('name');\n        nav_icon = _feat.get('dsc_tran_icon');\n    }\n    el('nav_txt').innerText = nav_content;\n    el('nav-icon').src = './js/ui/' + nav_icon + '.png';\n    el('nav-icon').alt = nav_icon;\n    serve();\n}\n\nfunction serve(){\n    if (active_route.get('media-type') === 'aud'){\n        el('media_div').style.display = 'block';\n        el('video-content').innerHTML = '';\n        el('audio-content').innerHTML = active_route.get('media');\n    } else if (active_route.get('media-type') === 'vid') {\n        el('media_div').style.display = 'block';\n        el('audio-content').innerHTML = '';\n        el('video-content').innerHTML = active_route.get('media');\n    } else if (active_route.get('media-type') === 'img') {\n        el('media_div').style.display = 'block';\n        el('audio-content').innerHTML = active_route.get('media');\n        el('video-content').innerHTML = '';\n    }\n}\n"],"names":["$1386f4ed5b3d2a4b$export$9099ad97b570f7c","Disposable","this","disposed","prototype","dispose","disposeInternal","$16831c8b3cdccec7$export$8eda8fbd1364c8a1","a","b","$16831c8b3cdccec7$export$45934da9231b7323","arr","target","direction","n","length","i","$16831c8b3cdccec7$export$1f4f991ce94838ce","begin","end","tmp","$16831c8b3cdccec7$export$46e35401bc090c62","data","extension","Array","isArray","$16831c8b3cdccec7$export$bcc761834e33d339","arr1","arr2","len1","$20af65f7a38205f7$export$ad8dd69aa6772cd0","$20af65f7a38205f7$export$5c50afa32081505e","$20af65f7a38205f7$export$3850addf0fb4e6a7","$b1e57fdd8dde574a$export$18e1b4ff5b3c2297","Error","$b1e57fdd8dde574a$var$uidCounter_","$b1e57fdd8dde574a$export$604e9536b9e0488a","obj","ol_uid","String","$f8271a0713c10a69$var$ua","navigator","userAgent","toLowerCase","$f8271a0713c10a69$export$543c908bf17a24fb","indexOf","$f8271a0713c10a69$export$bccc8605349feea7","$f8271a0713c10a69$export$f16ffc71033a7aaa","$f8271a0713c10a69$export$1940d5d2b4cf824d","devicePixelRatio","$f8271a0713c10a69$export$b011c43406458fa9","WorkerGlobalScope","OffscreenCanvas","self","$f8271a0713c10a69$export$9544418e5c6fedfe","Image","decode","$f8271a0713c10a69$export$700ce540937d8c69","passive","options","Object","defineProperty","get","window","addEventListener","removeEventListener","error","$9a566a9848e727af$export$9099ad97b570f7c","_super","AssertionError","code","_this","message","split","call","name","$9a566a9848e727af$var$__extends","$20a6d17585e78d64$export$b8795f4f643ce74f","assertion","errorCode","$9a566a9848e727af$exports","default","$ffc5f3d579aca584$var$transformStringDiv","$ffc5f3d579aca584$export$77f8d2fc923b14e3","transform","c","d","e","f","$ffc5f3d579aca584$export$6af9bbf310c9e4bf","coordinate","x","y","$ffc5f3d579aca584$export$452ae967caf14641","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","$ffc5f3d579aca584$export$6e6aac0f60e83c70","source","mat","det","$ffc5f3d579aca584$export$47bee913e0e80eb4","transformString","join","node","document","createElement","style","$ecbf3a0b36c7b4ac$export$9099ad97b570f7c","$92fe712ceb0b4cf4$export$9099ad97b570f7c","$d333a56ccd100cfd$export$a7ecbd362d65c1fe","coordinates","extent","$d333a56ccd100cfd$export$dbb3d72606cdc11","ii","$d333a56ccd100cfd$export$2852acc8f8b94686","$d333a56ccd100cfd$export$14e1765886db335a","value","opt_extent","$d333a56ccd100cfd$export$d6a0542127b96c83","slice","$d333a56ccd100cfd$export$c7d6a927f416dd39","dx","dy","$d333a56ccd100cfd$export$c422a9fcb5f1ee5c","$d333a56ccd100cfd$export$cc70e7e516e4370f","$d333a56ccd100cfd$export$4f55e2d709659e7b","extent1","extent2","$d333a56ccd100cfd$export$9bdde4fe01cd4b6b","minX","minY","maxX","maxY","relationship","Infinity","$d333a56ccd100cfd$export$ea8082d0226d35a5","$d333a56ccd100cfd$export$80741250c74fd4fa","$d333a56ccd100cfd$export$355d8dd7ec88232f","flatCoordinates","offset","stride","$d333a56ccd100cfd$export$4b116deb3079b147","$d333a56ccd100cfd$export$bcc761834e33d339","$d333a56ccd100cfd$export$46e35401bc090c62","$d333a56ccd100cfd$export$8696fee511ea7c7a","min","max","$d333a56ccd100cfd$export$c26f7b9c5adc34b4","callback","val","$d333a56ccd100cfd$export$3932426cd8118930","$d333a56ccd100cfd$export$4e2fc25ce97f3583","$d333a56ccd100cfd$export$35aedeaeee8be6cd","$d333a56ccd100cfd$export$5100f0815ea32995","$d333a56ccd100cfd$export$ab4e37d31d15614d","area","$d333a56ccd100cfd$export$988399e568471db1","$d333a56ccd100cfd$export$3dc3550566517965","$d333a56ccd100cfd$export$e178c8044d3d0a05","$d333a56ccd100cfd$export$339e303bf205caae","$d333a56ccd100cfd$export$38622892ed79bdc7","corner","$d333a56ccd100cfd$export$3212225221d5bc14","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$d333a56ccd100cfd$export$c491031eb9adcc3a","intersection","$d333a56ccd100cfd$export$c3bd2c3b798b0350","$d333a56ccd100cfd$export$76e02248c0889c3e","transformFn","opt_stops","width","height","push","xs","ys","l","apply","$d333a56ccd100cfd$var$_boundingExtentXYs","$11d79372009851c4$export$4b8705656de00c72","$11d79372009851c4$export$4a376e0f60d976ee","cosh","exp","$11d79372009851c4$export$e08236045caaa3e1","log2","log","LOG2E","$11d79372009851c4$export$fd0b1e5ac4df516c","t","$11d79372009851c4$export$8b6706701cd75ea9","$11d79372009851c4$export$11468133b1231643","angleInRadians","PI","$11d79372009851c4$export$4fc80c88d72f096","angleInDegrees","$11d79372009851c4$export$3334706ffb3dccb1","r","$11d79372009851c4$export$45ca8e7f50ccf2e0","$24f1b8341536f1fa$var$HEX_COLOR_RE_","$24f1b8341536f1fa$var$NAMED_COLOR_RE_","$24f1b8341536f1fa$export$9fe004474d6f7f65","color","$24f1b8341536f1fa$export$47bee913e0e80eb4","$24f1b8341536f1fa$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$24f1b8341536f1fa$export$21528ce64591bf2","s","hasOwnProperty","key","g","exec","hasAlpha","parseInt","substr","$24f1b8341536f1fa$export$2e33abec8aecd572","map","Number","$24f1b8341536f1fa$var$fromStringInternal_","$24f1b8341536f1fa$export$7266a24c0caa2a8","undefined","$6184461a452b3df9$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","hasListener","src","crossOrigin","$6184461a452b3df9$var$getKey","set","setSize","maxCacheSize","$6184461a452b3df9$export$601b9e2be44c7cb2","$3d78a3a2062be6dd$export$9099ad97b570f7c","BaseEvent","type","propagationStopped","defaultPrevented","preventDefault","stopPropagation","$727bf6738fdde94d$export$9099ad97b570f7c","$1ed278ebd065aaf6$export$f3c88f5a058bec38","assign","var_sources","TypeError","output","arguments","$1ed278ebd065aaf6$export$97fff7491bd246bd","object","property","$1ed278ebd065aaf6$export$207c30846165e93a","values","$1ed278ebd065aaf6$export$988399e568471db1","$c8df8fba8e9f5c07$var$Target","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","$c8df8fba8e9f5c07$var$__extends","listener","listeners","listenersForType","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","getListeners","opt_type","keys","index","splice","$c8df8fba8e9f5c07$export$9099ad97b570f7c","$00d29b6ace6e67fa$export$9099ad97b570f7c","$46e86cc58f3e2235$export$ff95bcce2965a200","opt_this","opt_once","bind","originalListener_1","eventsKey","$46e86cc58f3e2235$export$d2df825b2d8bc2ba","$46e86cc58f3e2235$export$6dee5fd4fdf600ff","$11407e360abf7d44$var$Observable","Observable","on","onInternal","once","onceInternal","un","unInternal","revision_","$11407e360abf7d44$var$__extends","changed","getRevision","len","ol_key","$11407e360abf7d44$export$21f63b82add5980c","$c8df8fba8e9f5c07$exports","$11407e360abf7d44$export$9099ad97b570f7c","$3e906ccbcd24be16$export$b902cfd711fa7f06","ObjectEvent","oldValue","$3e906ccbcd24be16$var$__extends","$3e906ccbcd24be16$export$9099ad97b570f7c","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","hasProperties","notify","eventType","addChangeListener","removeChangeListener","opt_silent","applyProperties","unset","$11407e360abf7d44$exports","$6755f2167754dc52$export$9099ad97b570f7c","$7436508a8164a9fe$export$9099ad97b570f7c","BaseLayer","properties","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$7436508a8164a9fe$var$__extends","getClassName","getLayerState","opt_managed","state","layer","managed","getZIndex","round","getOpacity","sourceState","getSourceState","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$3e906ccbcd24be16$exports","$b9d5daa9625d320c$export$9099ad97b570f7c","$021387f4bbb0e320$export$9099ad97b570f7c","$d78a3f8d945e8ec2$export$16970faadcd3f29b","layerState","viewState","zoom","$d78a3f8d945e8ec2$export$9099ad97b570f7c","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","setMap","handleSourcePropertyChange_","setSource","$d78a3f8d945e8ec2$var$__extends","array","states","getSource","getState","handleSourceChange_","getFeatures","pixel","Promise","resolve","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$7436508a8164a9fe$exports","$31a6ec27eb422148$export$bcc761834e33d339","coordinate1","coordinate2","equals","$31a6ec27eb422148$export$d40e2456b1281660","cosAngle","sinAngle","$31a6ec27eb422148$export$5a0d9577a24f3c5b","projection","canWrapX","worldWidth","worldsAway","$31a6ec27eb422148$export$c8ebaff90a21375a","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","$ba9cc254c2e615b0$var$MapRenderer","MapRenderer","map_","$ba9cc254c2e615b0$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","geometry","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","j","$d78a3f8d945e8ec2$exports","inView","getWrapX","callback_1","order","forEach","m","i1","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$ba9cc254c2e615b0$var$expireIconCache","$ba9cc254c2e615b0$export$9099ad97b570f7c","$7246c595371691cc$export$9099ad97b570f7c","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$7246c595371691cc$var$__extends","$35f3eb34fb00a437$var$fontRegEx","RegExp","$35f3eb34fb00a437$var$fontRegExMatchIndex","$35f3eb34fb00a437$export$b705256ab57c20ca","fontSpec","match","lineHeight","weight","variant","families","family","$158e6a8754c20e7c$export$fe55455cced7aebb","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","all","getContext","$158e6a8754c20e7c$export$495cfc7e7a2968e6","newNode","oldNode","parent","parentNode","replaceChild","$158e6a8754c20e7c$export$47503d53c08beb29","$33ba1dda25080cc3$export$6ad0413f8fea3c71","$33ba1dda25080cc3$export$70c5a077e5d6beb9","$33ba1dda25080cc3$export$907cf5cff4a8acb1","console","warn","$33ba1dda25080cc3$var$measureFont","measureElement","$33ba1dda25080cc3$var$measureContext","$33ba1dda25080cc3$export$384c0f09c94ed6cc","$33ba1dda25080cc3$export$6491effd8671e9f6","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$33ba1dda25080cc3$export$85ae5018a2fb98b4","check","done","fonts","font","clearInterval","setInterval","$33ba1dda25080cc3$export$a2bf16790cd8f004","metrics","$33ba1dda25080cc3$var$measureText","isNaN","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","offsetHeight","measureText","$33ba1dda25080cc3$export$4b2ca35321179b27","$33ba1dda25080cc3$export$3004e0c7927eb2d1","labelOrImage","originX","originY","w","h","scale","save","globalAlpha","setTransform","contextInstructions","translate","label","$33ba1dda25080cc3$var$executeLabelInstructions","drawImage","restore","$2d3983d3c236cd0f$var$CompositeMapRenderer","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","$35f3eb34fb00a437$export$2fbf9d496fb0d5a8","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","$2d3983d3c236cd0f$var$__extends","event_1","$7246c595371691cc$exports","declutterLayers","previousElement","layerIndex","element","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$158e6a8754c20e7c$export$439ebc2b0f0ec9f4","getDataAtPixel","$ba9cc254c2e615b0$exports","$2d3983d3c236cd0f$export$9099ad97b570f7c","$8c239c70ba402b1b$export$9099ad97b570f7c","$12698a83d5d6619d$var$Property","$12698a83d5d6619d$export$cf29312ab18b402e","CollectionEvent","opt_element","opt_index","$12698a83d5d6619d$var$__extends","$12698a83d5d6619d$var$Collection","Collection","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$12698a83d5d6619d$export$9099ad97b570f7c","$78bdbac1eaad4f08$var$Property","$78bdbac1eaad4f08$var$LayerGroup","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$12698a83d5d6619d$exports","setLayers","$78bdbac1eaad4f08$var$__extends","handleLayerChange_","getLayers","id","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","defaultZIndex","$78bdbac1eaad4f08$export$9099ad97b570f7c","$5f50aaa354ee43e8$export$9099ad97b570f7c","MapEvent","$5f50aaa354ee43e8$var$__extends","$5cb33e338f86483d$export$9099ad97b570f7c","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$5cb33e338f86483d$var$__extends","getEventPixel","getCoordinateFromPixel","$5f50aaa354ee43e8$exports","$1701e629f00eed9c$export$9099ad97b570f7c","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$eef913c1b3abba70$export$9099ad97b570f7c","$5ce77a9367e71852$export$9099ad97b570f7c","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$5ce77a9367e71852$var$__extends","emulateClick_","pointerEvent","newEvent","$5cb33e338f86483d$exports","clearTimeout","setTimeout","newEvent1","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","abs","clientX","clientY","$75da2f64972311f8$export$9099ad97b570f7c","$aa15c1da5ede11e4$export$9099ad97b570f7c","$a5b5f21c6babad23$var$PriorityQueue","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$a5b5f21c6babad23$export$9099ad97b570f7c","$7c9022c2746a8240$export$9099ad97b570f7c","$79e77b05f0af3af4$export$9099ad97b570f7c","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$79e77b05f0af3af4$var$__extends","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$79e77b05f0af3af4$export$f7de9366327711a7","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","sqrt","$4d7a66b176a5dddb$export$9099ad97b570f7c","$ed930b4d99744cb5$var$Units","RADIANS","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$ed930b4d99744cb5$export$af68584dedf5e52c","$ed930b4d99744cb5$export$9099ad97b570f7c","$9d93d71f67d1f597$export$9099ad97b570f7c","$e90c70f3094ec23d$export$9099ad97b570f7c","$b3eb9bab7e855649$export$9099ad97b570f7c","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$a2e3ad3c6452af0b$export$bb1f4f75177e5528","$a2e3ad3c6452af0b$export$6fd015d56b8406c9","$a2e3ad3c6452af0b$export$64afaa717a0c4932","$a2e3ad3c6452af0b$export$2126dea64bc40b7b","tan","$a2e3ad3c6452af0b$var$EPSG3857Projection","EPSG3857Projection","point","$a2e3ad3c6452af0b$var$__extends","$a2e3ad3c6452af0b$export$850c9b527a5298aa","$a2e3ad3c6452af0b$export$128bedc7a8a0ae2c","input","opt_output","opt_dimension","dimension","$a2e3ad3c6452af0b$export$f361696640082386","atan","$dbcd2854ae42c095$export$6fd015d56b8406c9","$dbcd2854ae42c095$export$af68584dedf5e52c","$dbcd2854ae42c095$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$dbcd2854ae42c095$var$__extends","$dbcd2854ae42c095$export$850c9b527a5298aa","$78eb3a0f9f69d51f$var$cache","$0e52faab48d1c258$var$transforms","$0e52faab48d1c258$export$568ed88074851180","destination","sourceCode","destinationCode","$8adf1144ec7585ad$export$aec7b6756585c081","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","$8adf1144ec7585ad$export$80a87d59b6e09730","distance","bearing","lon1","dByR","lat","asin","$257c627c1e280f22$export$3fbbaef54e2e9d28","$257c627c1e280f22$export$678028d364072132","$257c627c1e280f22$export$6308908a0016f099","$78eb3a0f9f69d51f$export$568ed88074851180","$257c627c1e280f22$export$7eb84799c931fe91","projectionLike","replace","$257c627c1e280f22$export$75cdc5d556e3d9b2","opt_units","pointResolution","getter","toEPSG4326_1","$257c627c1e280f22$export$747af4f49bde2f53","vertices","$257c627c1e280f22$export$a42db349809b0c24","projections","$257c627c1e280f22$export$fd4cd3535c7ea97f","$257c627c1e280f22$export$f704437a72056fb8","defaultCode","$257c627c1e280f22$export$c7a9310bdeddab53","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$0e52faab48d1c258$export$7eb84799c931fe91","$257c627c1e280f22$export$9336879ef6599bf5","$257c627c1e280f22$export$4b169b49e1a4823b","$257c627c1e280f22$export$f2a2f51d8aa8d6b0","projections2","forwardTransform","inverseTransform","$257c627c1e280f22$var$userProjection","$257c627c1e280f22$export$352fd07bdd93dc1e","$257c627c1e280f22$export$4a182a4d53d7595c","$257c627c1e280f22$export$b5d00774755783fc","destProjection","$257c627c1e280f22$export$a7d473ff80a6a3b","$257c627c1e280f22$export$f87215506b474b9e","$7a79f648aa728795$export$33d0cf822839cfa8","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$7a79f648aa728795$export$eaafe0fae18e32b1","$0e1a1b60122676ba$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$0e1a1b60122676ba$var$getSmoothClampedResolution","$0e1a1b60122676ba$export$56cba9b4a749f219","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$bfacba8d4304d68f$export$e97ec87d2336bd4e","$bfacba8d4304d68f$export$eaafe0fae18e32b1","$69c984769656a840$export$9fbc3b1d6b2da9ec","pow","$69c984769656a840$export$673b9849e2bc032c","$69c984769656a840$export$1b5c1277e30d397d","$69c984769656a840$export$5523e35ab8ae283a","$a2e3ad3c6452af0b$exports","PROJECTIONS","$dbcd2854ae42c095$exports","fromEPSG4326","toEPSG4326","$4d6d0df5f6d473fe$export$9099ad97b570f7c","$38fbdbcddbfb2114$export$92106241c01aa541","opt_dest","dest","$38fbdbcddbfb2114$export$d40e2456b1281660","anchor","anchorX","anchorY","k","$2c40e41d9046f704$var$tmpTransform","$2c40e41d9046f704$export$9099ad97b570f7c","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","applyTransform","nextArgs","$2c40e41d9046f704$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","$d333a56ccd100cfd$export$d1e01ccfd06bf8ee","rotate","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$fbc4cbc2dbecf2fd$var$SimpleGeometry","SimpleGeometry","layout","$fbc4cbc2dbecf2fd$var$__extends","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","$fbc4cbc2dbecf2fd$export$2a65008b73824080","setCoordinates","opt_layout","setLayout","nesting","$fbc4cbc2dbecf2fd$var$getLayoutForStride","$38fbdbcddbfb2114$export$8f869025bba9609b","$38fbdbcddbfb2114$export$41b0d7466cde8385","$2c40e41d9046f704$exports","$fbc4cbc2dbecf2fd$export$36912b83e488cd77","simpleGeometry","$fbc4cbc2dbecf2fd$export$9099ad97b570f7c","$1eeaf5ba3166ef8e$var$assignClosest","offset1","offset2","$1eeaf5ba3166ef8e$export$acf7548d1f0e8581","squaredDelta","$1eeaf5ba3166ef8e$export$ba38095f6bb45df2","ends","$1eeaf5ba3166ef8e$export$cc4caddc4c9b8b6f","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$1eeaf5ba3166ef8e$export$3dd3914e22f9012e","$341fcb0cdbf81912$export$e175f505890ac90f","$341fcb0cdbf81912$export$ab1a51db55485752","coordinatess","opt_ends","jj","$54c380e0fb260ccc$export$a5f6a1911260c251","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$54c380e0fb260ccc$export$ade7859c9eb393ec","simplifiedEnds","$54c380e0fb260ccc$export$383ea8a1f2974dfb","$54c380e0fb260ccc$export$e29de4fdb2175738","$54c380e0fb260ccc$export$1df19a1eb5514c2f","$ebfee1857bdd365b$export$92f32d891164b0ac","opt_coordinates","$ebfee1857bdd365b$export$d82a8a3167f968d","opt_coordinatess","$ebfee1857bdd365b$export$db289937da1f5213","endss","opt_coordinatesss","coordinatesss","$d21f3a0ce2fde0f1$export$9bf2059fd656d5e9","twiceArea","$d21f3a0ce2fde0f1$export$99cb92d00fd73c87","$2eba2434999e946d$export$9099ad97b570f7c","LinearRing","maxDelta_","maxDeltaRevision_","$2eba2434999e946d$var$__extends","getArea","$fbc4cbc2dbecf2fd$exports","$d78f061ab8e6937f$var$Point","Point","$d78f061ab8e6937f$var$__extends","$341fcb0cdbf81912$export$a53e62528b652807","$d78f061ab8e6937f$export$9099ad97b570f7c","$3c65f17c9f70f766$export$f7b55b637f92fd7","$3c65f17c9f70f766$export$e2ed757909b25f63","wn","$3c65f17c9f70f766$export$51e46a3625992b91","$7db2c52ec52bd7cf$export$45b4e4437984917d","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","$ff23e8a6e0292000$export$40f3d9558cf6e846","ret","$2b86337dc0cae6ce$export$26f047a5bfac4b1a","coordinatesExtent","point1","point2","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$d333a56ccd100cfd$export$525a75abb91115e3","$2b86337dc0cae6ce$export$717c2c7c46a5bf3d","$2b86337dc0cae6ce$export$f14bd9270666b480","$4e5c47cc66c1cbb9$export$c77fe031a1447f2e","$846e7d12e139eeec$export$add61ad31d0a68b4","edge","$846e7d12e139eeec$export$586adaf930d9fdb6","opt_right","right","isClockwise","$846e7d12e139eeec$export$325e57738fd8b321","$846e7d12e139eeec$export$4efd43868de93336","$8577ba96696c7470$var$Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$8577ba96696c7470$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","$d78f061ab8e6937f$exports","getLinearRingCount","getLinearRing","$2eba2434999e946d$exports","getLinearRings","linearRings","$8577ba96696c7470$export$9099ad97b570f7c","$8577ba96696c7470$export$bbb8e839e9c5bda9","opt_n","opt_sphereRadius","$8577ba96696c7470$export$b50d271c6e9656cd","$8577ba96696c7470$export$186fa890234c5366","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$8577ba96696c7470$export$5d1798f0e1df079","getRadius","startAngle","$013cf7a9f19a8f6c$var$View","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","$013cf7a9f19a8f6c$var$__extends","resolutionConstraintInfo","$013cf7a9f19a8f6c$export$8b6914b45b83f21f","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","resolutions","padding_","minZoom_","centerConstraint","$013cf7a9f19a8f6c$export$535fae5a159fbda4","resolutionConstraint","constraint","rotationConstraint","$013cf7a9f19a8f6c$export$9665b691bc2d5ca0","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","oldPadding","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","$013cf7a9f19a8f6c$var$animationCallback","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","delta","targetRotation","$013cf7a9f19a8f6c$export$5d87c27d7d9f380e","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","opt_size","getConstraints","getConstrainResolution","constrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","$013cf7a9f19a8f6c$var$calculateCenterOn","nearest","baseLevel","fit","geometryOrExtent","$8577ba96696c7470$exports","fromExtent","userProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","multiWorld","smoothResolutionConstraint","projExtent","capped","z","$0e1a1b60122676ba$export$d1041fa75d07f305","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","$0e1a1b60122676ba$export$7690ad4e930f454b","theta","opt_tolerance","enableRotation","constrainRotation","$013cf7a9f19a8f6c$export$9099ad97b570f7c","$1584674e6c442cb4$export$c563c2b7121f8771","$1584674e6c442cb4$export$48d31d2725e4d98b","$f45eee633772e0e7$var$PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","$78bdbac1eaad4f08$exports","view","$013cf7a9f19a8f6c$exports","$f45eee633772e0e7$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","$79e77b05f0af3af4$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","addOverlayInternal_","getId","toString","control","interaction","$f45eee633772e0e7$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","getLoading","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","$5ce77a9367e71852$exports","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","setLayerGroup","setView","computedStyle","offsetWidth","parseFloat","getClientRects","$f45eee633772e0e7$export$9099ad97b570f7c","$52e6a1ab15a4b16d$var$Control","Control","target_","listenerKeys","$52e6a1ab15a4b16d$var$__extends","mapEvent","$52e6a1ab15a4b16d$export$9099ad97b570f7c","$d272f1a7f2d66954$var$Attribution","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$d272f1a7f2d66954$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","lastChild","$158e6a8754c20e7c$export$f0994cfd84ab1152","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$52e6a1ab15a4b16d$exports","$d272f1a7f2d66954$export$9099ad97b570f7c","$df8a7089a421bf2f$export$9099ad97b570f7c","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$df8a7089a421bf2f$var$__extends","resetNorth_","$1022d6743ffba880$export$9099ad97b570f7c","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$1022d6743ffba880$var$__extends","zoomByDelta_","currentZoom","newZoom","$6fe2ef1e7a750c69$export$9099ad97b570f7c","$f26f33305875ffd9$export$63568b31cb17dd4d","$f26f33305875ffd9$export$d2c07614bfd6a817","$f26f33305875ffd9$export$9099ad97b570f7c","Interaction","setActive","$f26f33305875ffd9$var$__extends","active","$247995ce03a38b1e$export$9099ad97b570f7c","DoubleClickZoom","delta_","$247995ce03a38b1e$var$__extends","stopEvent","shiftKey","$f26f33305875ffd9$exports","zoomByDelta","$15b70ec573750fa6$export$e61edea4dfe4ed9b","$15b70ec573750fa6$export$9099ad97b570f7c","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$15b70ec573750fa6$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$15b70ec573750fa6$var$isPointerDraggingEvent","$1dd9bb17917c1459$export$8dbdea330bbd6b3c","conditions","pass","$1dd9bb17917c1459$export$7576515282e06e7a","altKey","metaKey","ctrlKey","$1dd9bb17917c1459$export$584a07df7b145c47","hasAttribute","activeElement","$1dd9bb17917c1459$export$363947888fb85da6","$1dd9bb17917c1459$export$a8612972eacfc116","$1dd9bb17917c1459$export$9f5e19851eeaf2c1","$1dd9bb17917c1459$export$1734dfcac3c09b2f","$1dd9bb17917c1459$export$59c8376875f673f8","$1dd9bb17917c1459$export$5bbcce8021828272","tagName","$1dd9bb17917c1459$export$d31d3f3aa38542a8","pointerType","$1dd9bb17917c1459$export$45cd27c0322d6513","isPrimary","$f61551752c4f4f08$export$9099ad97b570f7c","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$f61551752c4f4f08$var$__extends","centroid","$15b70ec573750fa6$exports","update","getDistance","getAngle","centerpx","$d813784fb0405083$export$9099ad97b570f7c","DragRotate","lastAngle_","$d813784fb0405083$var$__extends","$46289f3b330b6586$export$9099ad97b570f7c","RenderBox","geometry_","startPixel_","endPixel_","$46289f3b330b6586$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","getGeometry","$a8d898a7bd6fd9e0$var$DragBoxEventType","$a8d898a7bd6fd9e0$export$4d9b552836937ca2","DragBoxEvent","$a8d898a7bd6fd9e0$var$__extends","$a8d898a7bd6fd9e0$export$9099ad97b570f7c","DragBox","box_","$46289f3b330b6586$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$6a3aca92466c0896$export$9099ad97b570f7c","DragZoom","out_","out","$6a3aca92466c0896$var$__extends","factor","$a8d898a7bd6fd9e0$exports","$11a5f739eb17e24b$export$9099ad97b570f7c","$52d09675c125dcf1$export$9099ad97b570f7c","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$52d09675c125dcf1$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$1fae754d3ea6677a$export$9099ad97b570f7c","KeyboardZoom","$1fae754d3ea6677a$var$__extends","charCode","charCodeAt","$e0121ce5936cb4d8$export$9099ad97b570f7c","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$cd0092067e7ded9c$export$9658e13a40f6ce34","TRACKPAD","WHEEL","$cd0092067e7ded9c$export$9099ad97b570f7c","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$cd0092067e7ded9c$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$a80081c3438ffbf4$export$9099ad97b570f7c","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$a80081c3438ffbf4$var$__extends","rotationDelta","touch0","touch1","$e1a7c7fda3fcb5d0$export$9099ad97b570f7c","PinchZoom","lastDistance_","lastScaleDelta_","$e1a7c7fda3fcb5d0$var$__extends","scaleDelta","$b92278933294ec34$export$9099ad97b570f7c","Map1","$1022d6743ffba880$exports","zoomOptions","$df8a7089a421bf2f$exports","rotateOptions","attribution","$d272f1a7f2d66954$exports","attributionOptions","$3ba5c30aca7182c2$export$b403fbac94228e09","altShiftDragRotate","$d813784fb0405083$exports","doubleClickZoom","$247995ce03a38b1e$exports","zoomDelta","zoomDuration","dragPan","$f61551752c4f4f08$exports","pinchRotate","$a80081c3438ffbf4$exports","pinchZoom","$e1a7c7fda3fcb5d0$exports","keyboard","$52d09675c125dcf1$exports","$1fae754d3ea6677a$exports","mouseWheelZoom","$cd0092067e7ded9c$exports","shiftDragZoom","$6a3aca92466c0896$exports","$c930ad710d84b305$export$b403fbac94228e09","$b92278933294ec34$var$__extends","$2d3983d3c236cd0f$exports","$f45eee633772e0e7$exports","$e5266561d049a513$export$7cf753b6a6534915","styles_1","$e5266561d049a513$export$9099ad97b570f7c","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometry","$e5266561d049a513$var$__extends","setGeometryName","getGeometryName","getStyle","setStyle","getStyleFunction","handleGeometryChange_","opt_style","setId","$a1ed4c2e9ff299f1$var$GeometryCollection","GeometryCollection","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","$a1ed4c2e9ff299f1$var$__extends","unlistenGeometriesChange_","geometryCollection","setGeometries","geometries","getGeometries","$a1ed4c2e9ff299f1$var$cloneGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","concat","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","clonedGeometries","$a1ed4c2e9ff299f1$export$9099ad97b570f7c","$45178ee5c320f5c0$export$9099ad97b570f7c","FeatureFormat","dataProjection","defaultFeatureProjection","supportedMediaTypes","getReadOptions","readProjection","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","writeFeatures","writeGeometry","$45178ee5c320f5c0$export$534b7b915a5ec453","write","transformed","decimals","power_1","$82712b733b1390bc$export$9099ad97b570f7c","$3e9a0d8aed32823b$var$getObject","JSON","parse","$3e9a0d8aed32823b$export$9099ad97b570f7c","JSONFeature","$3e9a0d8aed32823b$var$__extends","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","$ad7f8cfc102a20b1$export$55be7a9e3fef4787","o","length_1","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","$16831c8b3cdccec7$export$26b1c556c0e0f127","$ad7f8cfc102a20b1$export$1a804b04fa5a0253","extrapolate","lo","hi","m0","$72877ffc9795efcc$export$7326ac1b36a49776","$7fc9bac1c7e6a765$export$9099ad97b570f7c","LineString","flatMidpoint_","flatMidpointRevision_","$7fc9bac1c7e6a765$var$__extends","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getFlatMidpoint","$8e075789d295b82f$var$MultiLineString","MultiLineString","lineStrings","$8e075789d295b82f$var$__extends","appendLineString","multiLineString","opt_interpolate","interpolate","$ad7f8cfc102a20b1$export$8958f67b085a89b1","getLineString","$7fc9bac1c7e6a765$exports","getLineStrings","getFlatMidpoints","midpoints","$2b86337dc0cae6ce$export$414b603e1c51ecd4","$8e075789d295b82f$export$9099ad97b570f7c","$ec70b77b5d212b39$var$MultiPoint","MultiPoint","$ec70b77b5d212b39$var$__extends","appendPoint","multiPoint","getPoint","getPoints","points","$ec70b77b5d212b39$export$9099ad97b570f7c","$2b01038ad8909ddb$var$MultiPolygon","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","$2b01038ad8909ddb$var$__extends","appendPolygon","newEndss","multiPolygon","$1eeaf5ba3166ef8e$export$7bbfd5f5d0d7544b","$1eeaf5ba3166ef8e$export$6564f135364e210c","$3c65f17c9f70f766$export$664b9cb38de51b70","$d21f3a0ce2fde0f1$export$3ed76a8ff8a671c","getEndss","getFlatInteriorPoints","$089899774745c253$export$3ed76a8ff8a671c","interiorPoints","$7db2c52ec52bd7cf$export$2bd6b2f516920f59","getInteriorPoints","$ec70b77b5d212b39$exports","$846e7d12e139eeec$export$9ae9bd8fe57776c1","simplifiedEndss","$54c380e0fb260ccc$export$503109e33f5b8344","getPolygon","prevEnds","getPolygons","$2b86337dc0cae6ce$export$eae4874c99627698","$341fcb0cdbf81912$export$abe2fb3e7ce9556","lastEnds","$2b01038ad8909ddb$export$9099ad97b570f7c","$90b5c261a4f758a8$var$GeoJSON","GeoJSON","geometryName","extractGeometryName_","extractGeometryName","$90b5c261a4f758a8$var$__extends","geoJSONFeature","$90b5c261a4f758a8$var$readGeometry","$e5266561d049a513$exports","geoJSONFeatures","crs","$90b5c261a4f758a8$var$writeGeometry","objects","$3e9a0d8aed32823b$exports","$90b5c261a4f758a8$var$readPointGeometry","$90b5c261a4f758a8$var$readLineStringGeometry","$90b5c261a4f758a8$var$readPolygonGeometry","$90b5c261a4f758a8$var$readMultiPointGeometry","$8e075789d295b82f$exports","$90b5c261a4f758a8$var$readMultiLineStringGeometry","$2b01038ad8909ddb$exports","$90b5c261a4f758a8$var$readMultiPolygonGeometry","$a1ed4c2e9ff299f1$exports","$90b5c261a4f758a8$var$readGeometryCollectionGeometry","geoJSON","$90b5c261a4f758a8$var$writePointGeometry","$90b5c261a4f758a8$var$writeLineStringGeometry","rightHanded","$90b5c261a4f758a8$var$writePolygonGeometry","$90b5c261a4f758a8$var$writeMultiPointGeometry","$90b5c261a4f758a8$var$writeMultiLineStringGeometry","$90b5c261a4f758a8$var$writeMultiPolygonGeometry","geometry1","$90b5c261a4f758a8$var$writeGeometryCollectionGeometry","$90b5c261a4f758a8$export$9099ad97b570f7c","$0939f585dceed3d1$var$Property","$0939f585dceed3d1$var$GeolocationError","GeolocationError","$0939f585dceed3d1$var$__extends","$0939f585dceed3d1$export$9099ad97b570f7c","Geolocation","position_","transform_","watchId_","handleProjectionChanged_","handleTrackingChanged_","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","accuracy","altitude","altitudeAccuracy","heading","longitude","latitude","projectedPosition","speed","circular","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getPosition","getSpeed","$cd8285e3e84f4d13$export$9099ad97b570f7c","$7736c129cc15e8f7$export$9099ad97b570f7c","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","getScale","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getImage","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","setRotateWithView","setScale","listenImageChange","unlistenImageChange","$6376afaf3edc9c87$export$55029509b82b2e2b","$09e02ea90a0e8bf3$var$RegularShape","RegularShape","canvas_","hitDetectionCanvas_","fill_","fill","origin_","radius_","radius1","radius2_","radius2","stroke_","stroke","size_","renderOptions_","$09e02ea90a0e8bf3$var$__extends","getFill","getRadius2","getStroke","createHitDetectionCanvas_","image","renderOptions","draw_","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","alpha","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineDash","lineDashOffset","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","maxRadius","createPath_","fillStyle","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","step","angle0","radiusC","lineTo","closePath","$09e02ea90a0e8bf3$export$9099ad97b570f7c","$52515b32646d1620$export$9099ad97b570f7c","CircleStyle","$52515b32646d1620$var$__extends","setRadius","$09e02ea90a0e8bf3$exports","$85f396a493b4e027$export$9099ad97b570f7c","Fill","color_","setColor","$f7585e292fcf6dc5$export$9099ad97b570f7c","$a451836ed9fa69af$export$9099ad97b570f7c","$723ec55387d416d6$export$9099ad97b570f7c","ImageBase","$723ec55387d416d6$var$__extends","$fced4221eaca0419$export$469eb8ba3f45955e","loadHandler","errorHandler","img","promise","listening_1","then","catch","ImageWrapper","imageLoadFunction","src_","image_","unlisten_","imageLoadFunction_","$fced4221eaca0419$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","setImage","$723ec55387d416d6$exports","$e98e828d2003bc1a$var$taintedTestContext","$e98e828d2003bc1a$var$IconImage","IconImage","imageState","hitDetectionImage_","imageState_","tainted_","$e98e828d2003bc1a$var$__extends","isTainted_","getImageData","dispatchChangeEvent_","replaceColor_","fillRect","getSrc","$fced4221eaca0419$exports","listenImage","ctx","globalCompositeOperation","imgData","putImageData","$e98e828d2003bc1a$export$7eb84799c931fe91","$bdd0cbe3d07330ec$export$9099ad97b570f7c","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","$e98e828d2003bc1a$exports","offset_","offsetOrigin_","offsetOrigin","$bdd0cbe3d07330ec$var$__extends","setAnchor","iconImageSize","$5d571ec9414fea2a$export$9099ad97b570f7c","Stroke","lineCap_","lineCap","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","getLineCap","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$b14009c8ddfadc85$var$Style","Style","geometryFunction_","$b14009c8ddfadc85$var$defaultGeometryFunction","renderer","text_","zIndex_","getText","setRenderer","getGeometryFunction","setFill","setStroke","setText","$b14009c8ddfadc85$var$defaultStyles","$b14009c8ddfadc85$export$33d0043adf82cc14","$52515b32646d1620$exports","$b14009c8ddfadc85$export$9099ad97b570f7c","$42eaa0851eb221cf$export$9099ad97b570f7c","Tile","tileCoord","interimTile","transition_","transition","transitionStarts_","$42eaa0851eb221cf$var$__extends","release","getInterimTile","refreshInterimChain","getTileCoord","setState","getAlpha","inTransition","endTransition","$17444c5007a5df29$export$9099ad97b570f7c","ImageTile","tileLoadFunction","tileLoadFunction_","$17444c5007a5df29$var$__extends","naturalWidth","naturalHeight","$42eaa0851eb221cf$exports","$4e3d7af6ddc0a7bb$var$brokenDiagonalRendering_","$7885574070ba36b3$export$9099ad97b570f7c","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$1a48f53661f04756$export$5f986e3acaff8610","imageSmoothingEnabled","msImageSmoothingEnabled","$4e3d7af6ddc0a7bb$var$drawTestTriangle","u1","v1","u2","v2","beginPath","moveTo","clip","$4e3d7af6ddc0a7bb$var$verifyBrokenDiagonalRendering","$4e3d7af6ddc0a7bb$export$fbbff54b3c32db8d","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$4e3d7af6ddc0a7bb$export$792a797b69be0d58","triangulation","sources","gutter","opt_renderEdges","opt_contextOptions","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","$11d79372009851c4$export$27dc5719ceda6735","$4e3d7af6ddc0a7bb$var$isBrokenDiagonalRendering","ud","vd","steps","$ad06dd403e0a8513$export$9099ad97b570f7c","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","$4e3d7af6ddc0a7bb$export$ed73ddd0371d87e2","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","$ad06dd403e0a8513$var$__extends","reproject_","getTileSize","leftToLoad_1","sourceListenKey_1","state1","unlistenSources_","$bf88e629b6ee6163$var$LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","$bf88e629b6ee6163$export$9099ad97b570f7c","$153c3e950abfd740$export$ea8082d0226d35a5","opt_tileCoord","$153c3e950abfd740$export$1039fb0288fd71e3","$153c3e950abfd740$export$a0f0ccbe5bbc0789","$61823e7907e95ef6$export$9099ad97b570f7c","TileCache","$61823e7907e95ef6$var$__extends","expireCache","pruneExceptNewestZ","$153c3e950abfd740$export$5208a752d34424e5","$4bb75659bb3462f8$export$9099ad97b570f7c","$3fa87a5786fdcb68$var$adaptAttributions","attributionLike","$3fa87a5786fdcb68$export$9099ad97b570f7c","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","$3fa87a5786fdcb68$var$__extends","getContextOptions","refresh","setAttributions","$755de0abe16276c4$var$TileRange","TileRange","containsTileRange","tileRange","getHeight","$755de0abe16276c4$export$ea8082d0226d35a5","$755de0abe16276c4$export$9099ad97b570f7c","$4957c1686d037101$var$tmpTileCoord","$4957c1686d037101$var$TileGrid","TileGrid","opt_strict","compare","every","currentVal","res","origins","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","fullTileRanges","$4957c1686d037101$export$9099ad97b570f7c","$1770d80474e42ee1$export$115502f69f929231","opt_maxZoom","opt_tileSize","opt_corner","$1770d80474e42ee1$var$resolutionsFromExtent","$1770d80474e42ee1$export$57c49ef1657592d4","$1770d80474e42ee1$export$9666e825b22d806d","$1770d80474e42ee1$export$6dfef52f91d4f582","opt_maxResolution","half","$5b2b9f9d853aaab8$var$TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","$61823e7907e95ef6$exports","tmpSize","tileOptions","zDirection","$5b2b9f9d853aaab8$var$__extends","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","loaded","covered","getGutterForProjection","setKey","getOpaque","getTile","getTileGrid","getTileGridForProjection","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","opt_projection","$1770d80474e42ee1$export$5a0d9577a24f3c5b","$153c3e950abfd740$export$b46b80619528d4e5","updateCacheSize","tileCount","useTile","$3fa87a5786fdcb68$exports","$5b2b9f9d853aaab8$export$8434c8db61edbf9d","TileSourceEvent","$5b2b9f9d853aaab8$export$9099ad97b570f7c","$309456a17bc9d7d9$export$ee162149bf998c0f","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","$309456a17bc9d7d9$export$2d2faeb2e9d58b93","templates","tileUrlFunctions","$153c3e950abfd740$export$4639c7f2947f4458","$309456a17bc9d7d9$export$c6a04e0c49b28953","$ed8b1ee91d3b1512$var$UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","$ed8b1ee91d3b1512$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","uid","tileState","$5b2b9f9d853aaab8$exports","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","fromCharCode","stop_1","$309456a17bc9d7d9$export$47abe479fba0e55d","$ed8b1ee91d3b1512$export$9099ad97b570f7c","$a00efaa4b8159fae$var$TileImage","TileImage","$a00efaa4b8159fae$var$defaultTileLoadFunction","tileClass","$17444c5007a5df29$exports","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","$a00efaa4b8159fae$var$__extends","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","newTile","$ad06dd403e0a8513$exports","z1","pixelRatio1","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$ed8b1ee91d3b1512$exports","imageTile","$a00efaa4b8159fae$export$9099ad97b570f7c","$5e7113aef66904ec$export$9099ad97b570f7c","XYZ","xyzOptions","gridOptions","$1770d80474e42ee1$export$5731532c605ee56","$5e7113aef66904ec$var$__extends","$a00efaa4b8159fae$exports","$0ba296154ef38f2d$export$bd9c1867755cf54e","$0ba296154ef38f2d$export$9099ad97b570f7c","OSM","$0ba296154ef38f2d$var$__extends","$5e7113aef66904ec$exports","$37ca435c53f13d4d$exports","t1","t2","e1","a1","h1","u","p","_maxEntries","_minEntries","n1","leaf","m2","h2","o1","_all","search","toBBox","o2","collides","a2","insert","_build","_splitRoot","_insert","i2","r3","a3","h3","o3","s1","l1","f1","_condense","compareMinX","compareMinY","toJSON","fromJSON","e2","f2","m1","_chooseSubtree","m3","c3","e3","a4","_split","_adjustParentBBoxes","_chooseSplitAxis","h4","_chooseSplitIndex","o4","s2","l2","u3","p1","d1","v","M","_allDistMargin","define","amd","RBush","$bb0e1df757854922$var$RBush","opt_maxEntries","rbush_","$parcel$interopDefault","items_","extents","items","getAll","getInExtent","bbox","forEach_","forEachInExtent","rbush","$bb0e1df757854922$export$9099ad97b570f7c","$c0e76308793a8fd7$export$9099ad97b570f7c","$0d7b3e6e3fdff479$export$8dbdea330bbd6b3c","$2e1cfd628699255e$var$withCredentials","$2e1cfd628699255e$export$52988233cf090939","format","success","failure","xhr","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","response","onerror","send","$2e1cfd628699255e$export$4355fa6d12274ca5","addFeatures","$2649c727c2ac59b6$export$e3e368afaf9a4fc7","VectorSourceEvent","opt_feature","opt_features","$2649c727c2ac59b6$var$__extends","$2649c727c2ac59b6$var$VectorSource","VectorSource","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","$2649c727c2ac59b6$export$9099ad97b570f7c","$353a86b6785d23cf$export$9099ad97b570f7c","$289d8a06dd383ff7$export$9099ad97b570f7c","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$289d8a06dd383ff7$var$__extends","getPreload","getUseInterimTilesOnError","$0d7ccc2184bbb6ae$export$9099ad97b570f7c","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$0d7ccc2184bbb6ae$var$__extends","loadedTileCallback","tiles","createLoadedTileFinder","getLayer","renderIfReadyAndVisible","loadImage","$48340b1070105b4e$export$9099ad97b570f7c","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","$48340b1070105b4e$var$__extends","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","newCanvas","newContext","clearRect","err","Uint8Array","$0d7ccc2184bbb6ae$exports","$9056ddaf99896c0e$var$CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$9056ddaf99896c0e$var$__extends","isDrawableTile","viewResolution","viewCenter","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","canvasTransform","clips","clipZs","currentClip","zs","reverse","currentZ","currentTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","origin_1","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","i_1","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","tileAlpha","alphaChanged","postRenderFunction","tileSource1","frameState1","opt_tileCallback","$48340b1070105b4e$exports","$9056ddaf99896c0e$export$9099ad97b570f7c","$e61f98c73384e953$export$9099ad97b570f7c","TileLayer","$e61f98c73384e953$var$__extends","$9056ddaf99896c0e$exports","$289d8a06dd383ff7$exports","$8b66177f43228c5f$var$Property","$8b66177f43228c5f$export$9099ad97b570f7c","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","$8b66177f43228c5f$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleFunction","$b14009c8ddfadc85$export$4aaa4bacaec09e94","$0029daffb0840ded$var$Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","$0029daffb0840ded$export$c649c04369bd3370","$0029daffb0840ded$export$2513c58bc344fc5c","$0029daffb0840ded$export$84e3c67fd41b07f5","$0029daffb0840ded$export$6cd4b1e0c0e7240c","$0029daffb0840ded$export$9099ad97b570f7c","$0d3e13e6cbc69874$export$9099ad97b570f7c","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$1894cda24582da9a$var$CanvasBuilder","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$1894cda24582da9a$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","myEnds","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$1894cda24582da9a$export$9099ad97b570f7c","$a4795f00dc9530fb$export$9099ad97b570f7c","CanvasImageBuilder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$a4795f00dc9530fb$var$__extends","myBegin","opt_sharedData","hitDetectionImage","$1894cda24582da9a$exports","$9d273adc89b91f65$var$CanvasLineStringBuilder","CanvasLineStringBuilder","$9d273adc89b91f65$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$9d273adc89b91f65$export$9099ad97b570f7c","$f6fbeb90ec7648f7$var$CanvasPolygonBuilder","CanvasPolygonBuilder","$f6fbeb90ec7648f7$var$__extends","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","$f6fbeb90ec7648f7$export$9099ad97b570f7c","$d31bc97d019705a3$export$9099ad97b570f7c","$b17755064c98f4bd$export$e8c34bbbade92a3a","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$b73d5ad30737d390$export$3964e67694391753","$b73d5ad30737d390$var$CanvasTextBuilder","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$b73d5ad30737d390$var$__extends","fillState","strokeState","textState","geometryType","placement","geometryWidths","beg_1","keep","saveTextStates_","backgroundFill","backgroundStroke","p0","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","$b73d5ad30737d390$export$9099ad97b570f7c","$ca6b30c5cbf24996$var$BATCH_CONSTRUCTORS","$f6fbeb90ec7648f7$exports","$a4795f00dc9530fb$exports","$9d273adc89b91f65$exports","$b73d5ad30737d390$exports","$ca6b30c5cbf24996$export$9099ad97b570f7c","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$af060b2ee005860e$export$9099ad97b570f7c","$f4f82de86f87f3a5$export$1829060502283fb8","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","previousAngle_1","iStart","charLength","chars","substring","$4382159e91befef5$var$tmpExtent","$4382159e91befef5$var$p1","$4382159e91befef5$var$p2","$4382159e91befef5$var$p3","$4382159e91befef5$var$p4","$4382159e91befef5$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$4382159e91befef5$var$rtlRegEx","$4382159e91befef5$var$horizontalTextAlign","align","test","TEXT_ALIGN","$4382159e91befef5$var$Executor","Executor","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","lines","numLines","widths","currentWidth","$33ba1dda25080cc3$export$ba197a5e917e3183","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","transform1","transform2","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","ii_1","execute","executeHitDetection","$4382159e91befef5$export$9099ad97b570f7c","$569c5f1125a255d7$var$ORDER","$569c5f1125a255d7$var$ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","indexes","$569c5f1125a255d7$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$569c5f1125a255d7$export$f610334c339a4991","featureCallback","imageData","idx","result_1","executor","opt_builderTypes","builderTypes","$569c5f1125a255d7$export$9099ad97b570f7c","$a9d040e5a239f750$var$CanvasImmediateRenderer","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$a9d040e5a239f750$var$__extends","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imageAnchor","imageOrigin","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$a9d040e5a239f750$export$9099ad97b570f7c","$5d8f27e59f1a1823$var$GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","$5d8f27e59f1a1823$export$65a5cfeed6fd0c33","feature1","feature2","$5d8f27e59f1a1823$export$f0ea347488340e3d","$5d8f27e59f1a1823$export$522dfd100dd96ba1","$5d8f27e59f1a1823$var$renderGeometry","$5d8f27e59f1a1823$var$renderFeatureInternal","$c153db647ed724b6$var$CanvasVectorLayerRenderer","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","$c153db647ed724b6$var$__extends","renderWorlds","executorGroup","vectorSource","endWorld","world","$ffc5f3d579aca584$export$e7468c0ae08395df","clipped","transforms","$a9d040e5a239f750$exports","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","styles","originalStyle","imgContext","$bdd0cbe3d07330ec$exports","byGeometryType","zIndexKeys","geomAndStyle","kk","$7a6473f1d8aeafa7$export$9fd146a6491490e3","resultFeatures","$7a6473f1d8aeafa7$export$57fd269e987b81b8","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","loadExtent","$d333a56ccd100cfd$export$5a0d9577a24f3c5b","declutterBuilderGroup","userTransform","$5d8f27e59f1a1823$export$f3b3f9822f340683","dirty","renderFeature","userExtent","replayGroupInstructions","$c153db647ed724b6$export$9099ad97b570f7c","$072ae9021a014f94$export$9099ad97b570f7c","VectorLayer","$072ae9021a014f94$var$__extends","$c153db647ed724b6$exports","$8b66177f43228c5f$exports","$7ecfb06eece070dc$export$9099ad97b570f7c","CanvasImageLayerRenderer","imageLayer","$7ecfb06eece070dc$var$__extends","imageSource","imageExtent","imageResolution","imagePixelRatio","size_1","dw","dh","previousAlpha","$b13d3350fe19c92c$export$9099ad97b570f7c","ImageCanvas","opt_loader","error_","$b13d3350fe19c92c$var$__extends","getError","handleLoad_","$26de507188fd7541$export$9099ad97b570f7c","CanvasVectorImageLayerRenderer","vectorRenderer_","layerImageRatio_","getImageRatio","coordinateToVectorPixelTransform_","renderedPixelToCoordinateTransform_","$26de507188fd7541$var$__extends","vectorPixel","vectorRenderer","imageFrameState_1","image_1","$b13d3350fe19c92c$exports","$7ecfb06eece070dc$exports","$f51bf160a59c2841$export$9099ad97b570f7c","VectorImageLayer","imageRatio","imageRatio_","$f51bf160a59c2841$var$__extends","$26de507188fd7541$exports","$78825b67a4f4586f$var$active_route","$78825b67a4f4586f$var$is_ascending","$78825b67a4f4586f$var$styles","$78825b67a4f4586f$var$view","$78825b67a4f4586f$var$map","$b92278933294ec34$exports","$e61f98c73384e953$exports","$0ba296154ef38f2d$exports","querySelector","$78825b67a4f4586f$var$box_v_layer","$f51bf160a59c2841$exports","$2649c727c2ac59b6$exports","$90b5c261a4f758a8$exports","$78825b67a4f4586f$var$el","$78825b67a4f4586f$var$get_feature_at_coord","_coord","active_features_in_this_func","feat","$78825b67a4f4586f$var$set_active_route","innerText","$78825b67a4f4586f$var$serve","$78825b67a4f4586f$var$geolocation","$0939f585dceed3d1$exports","enableHighAccuracy","$78825b67a4f4586f$var$accuracyFeature","$78825b67a4f4586f$var$positionFeature","_active_feat","next_route","$78825b67a4f4586f$var$render_nav","$78825b67a4f4586f$var$render_tran_nav","$072ae9021a014f94$exports","$78825b67a4f4586f$var$gn","GyroNorm","_feat","_is_asc","nav_content","nav_icon","alt","_next_feat","init","beta","toRadians","do","gamma","ol","DeviceOrientation"],"version":3,"file":"index.411c950d.js.map"}